{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Navigation/SideDrawer/SideDrawer.css","components/UI/Input/Input.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavItems/NavItem/NavItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","containers/Layout/Layout.css","assets/images/logo.png","components/Logo/Logo.css","components/Navigation/NavItems/NavItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavItems/NavItem/NavItem.js","components/Navigation/NavItems/NavItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","axios-orders.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/Builder/Builder.js","store/actions.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Seeds3","DutchOvenLid","DutchOven","DutchOvenHandle","BraiserOvenLid","Braiser","BraiserHandle","Casserole","CasseroleHandle","Skillet","SkilletHandle","SideDrawer","Open","Close","Logo","Input","Label","InputElement","Invalid","ValidationError","BuildControl","Less","More","Toolbar","DesktopOnly","NavItem","active","BuildControls","OrderButton","enable","Button","Success","Danger","Content","__webpack_require__","p","NavItems","DrawerToggle","Backdrop","Burger","Modal","Loader","load1","CheckoutSummary","ContactData","Order","aux","props","children","logo","react_default","a","createElement","className","classes","src","burgerLogo","alt","navItem","NavLink","to","link","exact","activeClassName","navItems","NavItem_NavItem","drawerToggle","onClick","clicked","toolbar","DrawerToggle_DrawerToggle","drawerToggleClicked","Logo_Logo","NavItems_NavItems","backdrop","show","sideDrawer","attachedClasses","open","Aux","Backdrop_Backdrop","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","Toolbar_Toolbar","this","SideDrawer_SideDrawer","React","Component","instance","axios","create","baseURL","BurgerIngredient","ingredient","type","burger","transformedIngredients","Object","keys","ingredients","map","ingredientKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","buildControl","removed","disabled","label","added","controls","buildControls","price","toFixed","control","BuildControl_BuildControl","ingredientAdded","ingredientRemoved","purchaseable","ordered","nextProps","nextState","modalClosed","style","transform","opacity","button","btnType","OrderSummary","ingredientSummary","ingKey","textTransform","Button_Button","purchaseCancelled","purchaseContinued","spinner","withErrorHandler","WrappedComponent","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","UI_Modal_Modal","message","Builder","purchasing","loading","updatePurchaseState","sum","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","disabledInfo","objectSpread","ings","orderSummary","Spinner_Spinner","Burger_Burger","BuildControls_BuildControls","onIngredientAdded","onIngredientRemoved","Burger_OrderSummary_OrderSummary","connect","totalPrice","dispatch","ingName","ingredientName","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","validationError","inputClasses","invalid","shouldValidate","touched","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementId","order","orderData","post","then","catch","inputChangedHandler","inputId","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formEl","Input_Input","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","CheckoutSummary_CheckoutSummary","Route","path","match","component","amount","ingredientOutput","ig","display","border","padding","Number","parseFloat","orders","get","fetchedOrders","data","err","Order_Order","App","BrowserRouter","containers_Layout_Layout","Switch","Orders","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","initialState","skillet","casserole","braiser","dutchoven","INGREDIENT_PRICES","reducer","undefined","action","defineProperty","store","createStore","app","es","src_App","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.808e049c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop__10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1__3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2__1cUso\",\"Seeds3\":\"BurgerIngredient__Seeds3__2sHut\",\"DutchOvenLid\":\"BurgerIngredient__DutchOvenLid__3UHH5\",\"DutchOven\":\"BurgerIngredient__DutchOven__2mKYv\",\"DutchOvenHandle\":\"BurgerIngredient__DutchOvenHandle__1l_O9\",\"BraiserOvenLid\":\"BurgerIngredient__BraiserOvenLid__M4hlm\",\"Braiser\":\"BurgerIngredient__Braiser__1z4kh\",\"BraiserHandle\":\"BurgerIngredient__BraiserHandle__3lmlQ\",\"Casserole\":\"BurgerIngredient__Casserole__3mG5Y\",\"CasseroleHandle\":\"BurgerIngredient__CasseroleHandle__38cRU\",\"Skillet\":\"BurgerIngredient__Skillet__2aU8X\",\"SkilletHandle\":\"BurgerIngredient__SkilletHandle__1MzKG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__21TuB\",\"Open\":\"SideDrawer__Open__1pVYR\",\"Close\":\"SideDrawer__Close__3Yv1l\",\"Logo\":\"SideDrawer__Logo__3TkPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\",\"ValidationError\":\"Input__ValidationError__1ElSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2JJW-\",\"Logo\":\"Toolbar__Logo__1efBD\",\"DesktopOnly\":\"Toolbar__DesktopOnly__WADUd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavItem__NavItem__r-b9L\",\"active\":\"NavItem__active__2ZZNc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\",\"enable\":\"BuildControls__enable__3jYIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__2fWdX\"};","module.exports = __webpack_public_path__ + \"static/media/logo.3c0533ee.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__19WaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"NavItems__NavItems__3fZSa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__26to0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__efy1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load1\":\"Spinner__load1__3Y-9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1J81r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__4yi4Z\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from \"react\";\n// import so webpack can locate\nimport burgerLogo from \"../../assets/images/logo.png\";\nimport classes from \"./Logo.css\";\n\nconst logo = (props) => (\n    <div className={classes.Logo}>\n        <img src={burgerLogo} alt=\"Logo\" />\n    </div>\n);\n\nexport default logo;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./NavItem.css\";\n\nconst navItem = (props) => (\n    <li className={classes.NavItem}>\n        <NavLink to={props.link} exact activeClassName={classes.active}>{props.children}</NavLink>\n    </li>\n)\n\nexport default navItem;","import React from \"react\";\nimport classes from \"./NavItems.css\";\nimport NavItem from \"./NavItem/NavItem\";\n\nconst navItems = (props) => (\n    <ul className={classes.NavItems}>\n        <NavItem link=\"/\" exact>Cookware</NavItem>\n        <NavItem link=\"/orders\">Orders</NavItem>\n    </ul>\n);\n\nexport default navItems;","import React from \"react\";\nimport classes from \"./DrawerToggle.css\";\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n)\n\nexport default drawerToggle;","import React from \"react\";\nimport classes from \"./Toolbar.css\";\nimport Logo from \"../../../components/Logo/Logo\";\nimport NavItems from \"../NavItems/NavItems\";\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\n\n// used in Layout component\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavItems /> \n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from \"react\";\nimport classes from \"./Backdrop.css\"\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from \"react\";\nimport Logo from \"../../Logo/Logo\";\nimport NavItems from \"../NavItems/NavItems\";\nimport classes from \"./SideDrawer.css\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport Aux from \"../../../hoc/Aux/Aux\"\n\nconst sideDrawer = (props) => {\n    // toggle Close/Open class on props.open from Layout\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavItems />\n                </nav>\n            </div>\n        </Aux>\n    );\n}\n\nexport default sideDrawer;","import React from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport classes from \"./Layout.css\";\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\n\nclass Layout extends React.Component {\n\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({ showSideDrawer: false });\n    }\n\n    // used in Toolbar\n    sideDrawerToggleHandler = () => {\n        // safely set state using old state\n        this.setState((prevState) => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        });\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}/>\n                <SideDrawer\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n}\n\n\nexport default Layout;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://order-e8ff6.firebaseio.com/\"\n})\n\nexport default instance;","import React from \"react\";\nimport classes from \"./BurgerIngredient.css\"\nimport PropTypes from \"prop-types\";\n\nclass BurgerIngredient extends React.Component {\n    render() {\n        let ingredient = null;\n\n        switch (this.props.type) {\n            case (\"bread-bottom\"):\n                // ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case (\"bread-top\"):\n                // ingredient = (\n                //     <div className={classes.BreadTop}>\n                //         <div className={classes.Seeds1}></div>\n                //         <div className={classes.Seeds2}></div>\n                //         <div className={classes.Seeds3}></div>\n                //     </div>\n                // );\n                break;\n            case (\"dutchoven\"):\n                // ingredient = <div className={classes.DutchOven}></div>;\n                ingredient = (\n                    <div>\n                        <div className={classes.DutchOvenLid}></div>\n                        <div className={classes.DutchOvenHandle}></div>\n                        <div className={classes.DutchOven}></div>\n\n                    </div>\n                );\n                break;\n            case (\"braiser\"):\n                // ingredient = <div className={classes.Braiser}></div>;\n                ingredient = (\n                    <div>\n                        <div className={classes.BraiserOvenLid}></div>\n\n                        <div className={classes.Braiser}>\n                            <div className={classes.BraiserHandle}></div>\n                        </div>\n\n                    </div>\n                );\n                break;\n            case (\"skillet\"):\n                // ingredient = <div className={classes.Skillet}></div>;\n                ingredient = (\n                    <div>\n                        <div className={classes.Skillet}><div className={classes.SkilletHandle}></div></div>\n                    </div>\n                );\n                break;\n            case (\"casserole\"):\n                // ingredient = <div className={classes.Casserole}></div>;\n                ingredient = (\n                    <div>\n                        <div className={classes.CasseroleHandle}></div>\n                        <div className={classes.Casserole}></div>\n\n                    </div>\n                );\n                break;\n            default:\n                ingredient = null;\n        }\n        return ingredient;\n    }\n};\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from \"react\";\nimport classes from \"./Burger.css\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nconst burger = (props) => {\n    // keys passed as ingredients\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(ingredientKey => {\n            // returning BurgerIngredient components corresponding with keys & value #s\n            return [...Array(props.ingredients[ingredientKey])].map((_, i) => {\n                return <BurgerIngredient key={ingredientKey+i} type={ingredientKey} />\n            });\n            // flattening array to check for null\n        }).reduce((arr, el) => {\n            return arr.concat(el);\n        }, []);\n\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Select your cookware below.</p>\n    }\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n}\n\nexport default burger;","import React from \"react\";\nimport classes from \"./BuildControl.css\"\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        {/* on click, add or remove ingredient */}\n        <button \n            className={classes.Less} \n            onClick={props.removed} \n            disabled={props.disabled}>\n            <h1>-</h1>\n        </button>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.More} \n            onClick={props.added} \n        >\n            <h1>+</h1>\n        </button>\n    </div>\n)\n\nexport default buildControl;","import React from \"react\";\nimport classes from \"./BuildControls.css\";\nimport BuildControl from \"./BuildControl/BuildControl\";\n\nconst controls = [\n    // { label : \"Lettuce\", type: \"lettuce\"},\n    // { label : \"Bacon\", type: \"bacon\"},\n    // { label : \"Cheese\", type: \"cheese\"},\n    // { label : \"Meat\", type: \"meat\"}\n    { label : \"Skillet\", type: \"skillet\"},\n    { label : \"Casserole\", type: \"casserole\"},\n    { label : \"Braiser\", type: \"braiser\"},\n    { label : \"Dutch Oven\", type: \"dutchoven\"}\n]\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <h3>Create Your Order</h3>\n        <p>Current Price: <strong>${props.price.toFixed(2)}</strong></p>\n        {controls.map(control => (\n            <BuildControl \n                key={control.label} \n                label={control.label} \n                // pass the type of ingredient that should be added/removed\n                added={() => props.ingredientAdded(control.type)}\n                removed={() => props.ingredientRemoved(control.type)}\n                // so we can access the right control to disable\n                disabled={props.disabled[control.type]}\n            />\n        ))} \n\n        <button \n            className={classes.OrderButton}\n            // disable if not purchaseable\n            disabled={!props.purchaseable}\n            onClick={props.ordered}>\n            Place Order\n        </button>\n    </div> \n)\n\nexport default buildControls;","import React from \"react\";\nimport classes from \"./Modal.css\";\nimport Aux from \"../../../hoc/Aux/Aux\";\nimport Backdrop from \"../Backdrop/Backdrop\";\n\nclass Modal extends React.Component {\n    // controlling update of OrderSummary\n    shouldComponentUpdate(nextProps, nextState) {\n        // update only when show changes\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    componentWillUpdate() {\n        // console.log(\"[Modal] willUpdate\")\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div className={classes.Modal}\n                    // modal handling\n                    style={{\n                        transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\n                        opacity: this.props.show ? \"1\" : \"0\"\n                    }}>\n                    {this.props.children}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nexport default Modal;","import React from \"react\";\nimport classes from \"./Button.css\"\n\nconst button = (props) => (\n    <button\n        // dynamically set button type\n        className={[classes.Button, classes[props.btnType]].join(\" \")}\n        disabled={props.disabled}\n        onClick={props.clicked}\n        >{props.children}</button>\n)\n\nexport default button;","import React from \"react\";\nimport Aux from \"../../../hoc/Aux/Aux\";\nimport Button from \"../../UI/Button/Button\"\n\n// for modal\nclass OrderSummary extends React.Component {\n\n    // left for future purposes (could be functional)\n    componentWillUpdate() {\n        // console.log(\"[Order Summary] willUpdate\");\n    }\n\n    render() {\n        // transform object to array\n        const ingredientSummary = Object.keys(this.props.ingredients).map(ingKey => {\n            return (\n                <li key={ingKey}>\n                    <span style={{ textTransform: \"capitalize\" }}>{ingKey}</span>\n                    : {this.props.ingredients[ingKey]}\n                </li>\n            )\n        })\n\n        return (\n            <Aux>\n                <h3>Your Order</h3>\n                <p>Your order includes:</p>\n                <ul>\n       \n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: ${this.props.price.toFixed(2)}</strong></p>\n                <p>Checkout?</p>\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>Cancel</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>Continue</Button>\n            </Aux>\n        )\n    }\n}\n\nexport default OrderSummary;","import React from \"react\";\nimport classes from \"./Spinner.css\"\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n)\n\nexport default spinner;","import React, { Component } from \"react\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport Aux from \"../../hoc/Aux/Aux\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n        // deprecated, should use constructor \n        // (execute code when component is created)\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                // clear errors when a request is sent\n                this.setState({error: null});\n                // return request so it is available\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                // set state error to error recieved from Firebase\n                this.setState({error: error})\n            });\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.request.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error:null});\n        }\n\n        render() {\n            return (\n                <Aux>\n                    \n                    <Modal \n                        // show only if error\n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}\n                    >\n                        {/* if error, render error message from Firebase */}\n                        {this.state.error ? this.state.error.message : null}\n                </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"../../axios-orders\"; // use configured instance\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actionTypes from \"../../store/actions\";\n\nclass Builder extends React.Component {\n    // For UI state only, the rest managed in Redux\n    state = {\n        purchasing: false, // determine if used has clicked Order\n        loading: false, // when T show spinner, when F show ordersummary\n        error: false\n    };\n\n    componentDidMount() {\n        // axios.get(\"https://order-e8ff6.firebaseio.com/ingredients.json\")\n        //     .then(response => {\n        //         this.setState({ ingredients: response.data })\n        //     }).catch(error => {\n        //         this.setState({error: true});\n        //     });\n    }\n\n    updatePurchaseState = (ingredients) => {\n        // determine whether or not anything has been selected\n        const sum = Object.keys(ingredients).map(ingKey => {\n            // return the amount\n            return ingredients[ingKey];\n            // reduce to return one result for sum\n        }).reduce((sum, el) => {\n            return sum + el;\n        }, 0);\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        this.setState({ purchasing: true })\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false });\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.history.push(\"/checkout\");\n    }\n\n    render() {\n        // copy ingredients from state\n        const disabledInfo = {\n            ...this.props.ings // from store\n        }\n        // return boolean to tell if it should be disabled\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n        let burger = this.state.error ? <p>Can't load ingredients</p> : <Spinner />\n        if (this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        price={this.props.price}\n                        purchaseable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}\n                    />\n                </Aux>\n            );\n            orderSummary = <OrderSummary\n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler} />\n        }\n        if (this.state.loading) {\n            orderSummary = <Spinner />\n        }\n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        )\n    }\n}\n\n// fetching from global state\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        price: state.totalPrice\n    }\n}\n\n// sending to reducer values as props\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch({type: actionTypes.ADD_INGREDIENT, ingredientName: ingName}),\n        onIngredientRemoved: (ingName) => dispatch({type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingName})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Builder, axios));","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";","import React from \"react\";\nimport Burger from \"../../Burger/Burger\";\nimport Button from \"../../UI/Button/Button\";\nimport classes from \"./CheckoutSummary.css\";\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>Please review your order</h1>\n            <div style={{width: \"100%\", margin:\"auto\"}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button \n                btnType=\"Danger\" \n                clicked={props.checkoutCancelled}>Cancel</Button>\n            <Button \n                btnType=\"Success\" \n                clicked={props.checkoutContinued}>Continue</Button>\n        </div>\n    );\n}\n\nexport default checkoutSummary;","import React from \"react\";\nimport classes from \"./Input.css\";\n\nconst input = (props) => {\n    let inputElement = null;\n    let validationError = null;\n    const inputClasses = [classes.InputElement];\n\n    // only marked invalid if it has validation checkers and has been touched\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    // Error message\n    if (props.invalid && props.touched) {\n        validationError = <p className={classes.ValidationError}>Please enter a valid value</p>;\n    }\n\n    switch (props.elementType) {\n        case (\"input\"):\n            inputElement = <input\n                className={inputClasses.join(\" \")}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case (\"textarea\"):\n            inputElement = <textarea\n                className={inputClasses.join(\" \")}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case (\"select\"):\n            inputElement = (\n                <select\n                    className={inputClasses.join(\" \")}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={inputClasses.join(\" \")}\n                {...props.elementConfig}\n                value={props.value} \n                onChange={props.changed}/>;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n            {validationError}\n        </div>\n    );\n};\n\nexport default input;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport classes from \"./ContactData.css\";\nimport axios from \"../../../axios-orders\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\n\nclass ContactData extends React.Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"Name\"\n                },\n                value: \"\",\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"Street\"\n                },\n                value: \"\",\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"Zip Code\"\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"Country\"\n                },\n                value: \"\",\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"Email\"\n                },\n                value: \"\",\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: \"select\",\n                elementConfig: {\n                    options: [\n                        { value: \"cheapest\", displayValue: \"Cheapest\" },\n                        { value: \"fastest\", displayValue: \"Fastest\" }\n                    ]\n                },\n                value: \"cheapest\",\n                validation: {},\n                valid: true\n            },\n        },\n        formIsValid: false,\n        loading: false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        this.setState({ loading: true });\n        const formData = {};\n        // formElementId is email/country/etc\n        for (let formElementId in this.state.orderForm) {\n            formData[formElementId] = this.state.orderForm[formElementId].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price, // would need to calculate on server-side in prod env\n            orderData: formData\n        }\n        // post order to db\n        axios.post(\"/orders.json\", order) // .json is Firebase notation\n            .then(response => {\n                this.setState({ loading: false });\n                this.props.history.push(\"/\");\n            })\n            .catch(error => {\n                this.setState({ loading: false });\n            });\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n        if (rules.required) {\n            // set valid to value if not an empty string\n            isValid = value.trim() !== \"\" && isValid;\n        }\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputId) => {\n        // clone order form from state\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        }\n        // deep clone of value like email/name\n        const updatedFormElement = {\n            ...updatedOrderForm[inputId]\n        }\n        // change value of select element \n        updatedFormElement.value = event.target.value;\n        // validation with checkValidity helper\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputId] = updatedFormElement;\n        \n        // checking entire form validity\n        let formIsValid = true;\n        for (let inputId in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputId].valid && formIsValid;\n        }\n        this.setState({\n            orderForm: updatedOrderForm,\n            formIsValid: formIsValid\n        })\n    }\n\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formEl => (\n                    <Input\n                        key={formEl.id}\n                        elementType={formEl.config.elementType}\n                        elementConfig={formEl.config.elementConfig}\n                        value={formEl.config.value} \n                        invalid={!formEl.config.valid}\n                        shouldValidate={formEl.config.validation} // return false when no validation present\n                        touched={formEl.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formEl.id)}/>\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>Submit</Button>\n            </form>\n        );\n        if (this.state.loading) {\n            form = <Spinner />\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter Contact Information</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        price: state.totalPrice\n    }\n}\n\n// connect component to Redux\nexport default connect(mapStateToProps)(ContactData);","import React from \"react\";\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport {Route} from \"react-router-dom\";\nimport ContactData from \"./ContactData/ContactData\";\nimport {connect} from \"react-redux\";\n\nclass Checkout extends React.Component {\n\n    checkoutCancelledHandler = () => {\n        // goes back to the last page\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace(\"/checkout/contact-data\");\n    }\n\n    render() {\n        return (\n            <div>\n                <CheckoutSummary \n                    ingredients={this.props.ings}\n                    checkoutCancelled={this.checkoutCancelledHandler}\n                    checkoutContinued={this.checkoutContinuedHandler}/>\n                <Route path={this.props.match.path + \"/contact-data\"} \n                        component={ContactData}/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients\n    }\n}\n\nexport default connect(mapStateToProps)(Checkout); // omitting second argument of mapDispatchToProps","import React from \"react\";\nimport classes from \"./Order.css\";\n\nconst order = (props) => {\n    let ingredients = [];\n    for (let ingredientName in props.ingredients) {\n        ingredients.push({\n            name: ingredientName,\n            amount: props.ingredients[ingredientName]\n        });\n    }\n    const ingredientOutput = ingredients.map(ig => {\n        return <span\n            style={{\n                textTransform: \"capitalize\",\n                display: \"inline-block\",\n                margin: \"0 8px\",\n                border: \"1px solid lightgrey\",\n                padding: \"5px\"\n\n            }} \n            key={ig.name}>{ig.name} ({ig.amount})</span>;\n    })\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>${Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n    )\n}\n\nexport default order;","import React from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nclass Orders extends React.Component {\n    state = {\n        orders: [],\n        loading: true\n    }\n\n    componentDidMount() {\n        // get orders from Firebase and populate\n        axios.get(\"/orders.json\")\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n                this.setState({ loading: false, orders: fetchedOrders });\n            }).catch(err => {\n                this.setState({ loading: false });\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.orders.map(order => (\n                    <Order \n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price} />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default withErrorHandler(Orders, axios);","import React, { Component } from 'react';\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Layout from \"./containers/Layout/Layout\";\nimport Builder from \"./containers/Builder/Builder\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/\" exact component={Builder} />\n          </Switch>\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"./actions\";\n\nconst initialState = {\n    ingredients: {\n        skillet: 0,\n        casserole: 0,\n        braiser: 0,\n        dutchoven: 0\n    },\n    totalPrice: 0\n};\n\nconst INGREDIENT_PRICES = {\n    skillet: 110,\n    casserole: 170,\n    braiser: 210,\n    dutchoven: 375\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1 // ingredientName recieved as payload\n                },\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n            };\n        case actionTypes.REMOVE_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1 // ingredientName recieved as payload\n                },\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./store/reducer\";\n\nconst store = createStore(reducer);\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}